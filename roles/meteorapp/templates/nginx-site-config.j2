server {
    server_name {{ nginx_server_name }};
    listen {{ passenger_port }};
    {% if nginx_enable_ssl %}
      listen 443 ssl spdy;
      ssl on;
      ssl_certificate     /etc/ssl/certs/{{ nginx_ssl_cert_file_name }};
      ssl_certificate_key /etc/ssl/private/{{ nginx_ssl_key_file_name }};
      ssl_prefer_server_ciphers On;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers 'AES128+EECDH:AES128+EDH:!aNULL';
      ssl_session_cache shared:SSL:10m;
      {% if nginx_force_ssl %}
          if ($scheme = http) {
              return 301 https://$server_name$request_uri;
          }
      {% endif %}
    {% endif %}

    root {{ app_checkout_bundle_path }}/bundle/public/;
    passenger_enabled on;
    passenger_friendly_error_pages {{ passenger_friendly_error_pages }};
    passenger_sticky_sessions on;
    passenger_user {{ passenger_user }};
    passenger_group {{ passenger_group }};
    passenger_app_type node;
    passenger_min_instances {{ passenger_min_instances }};
    passenger_startup_file main.js;
    passenger_start_timeout {{ passenger_start_timeout }};
    {% if passenger_max_requests is defined %}
    passenger_max_requests {{ passenger_max_requests }};
    {% endif %}
    {% if meteor_settings %}
    passenger_env_var METEOR_SETTINGS '{{ var_meteor_settings.stdout }}';
    {% endif %}

    client_max_body_size {{ nginx_client_max_body_size }};

    # serve static assets straight from nginx
    location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
          root {{ app_checkout_bundle_path }}/bundle/programs/web.browser/app/;
          access_log off;
          expires max;
    }



    {% for meteor_env_key, meteor_env_val in meteor_env.iteritems() %}
      passenger_env_var {{ meteor_env_key }} "{{ meteor_env_val }}";
    {% endfor %}



}
