server {
    server_name {{ nginx_server_name }};
    listen {{ passenger_port }};
    {% if nginx_enable_ssl %}
      listen 443 ssl spdy;
      ssl on;
      ssl_certificate     /etc/ssl/certs/{{ nginx_ssl_cert_file_name }};
      ssl_certificate_key /etc/ssl/private/{{ nginx_ssl_key_file_name }};
      ssl_prefer_server_ciphers On;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers 'AES128+EECDH:AES128+EDH:!aNULL';
      ssl_session_cache shared:SSL:10m;
      {% if nginx_force_ssl %}
        if ($scheme = http) {
            add_header 'Access-Control-Allow-Origin' '*';
            return 301 https://$server_name$request_uri;
        }
      {% endif %}
    {% endif %}

    root {{ app_checkout_bundle_path }}/bundle/public/;
    passenger_enabled on;
    passenger_friendly_error_pages {{ passenger_friendly_error_pages }};
    passenger_sticky_sessions on;
    passenger_user {{ passenger_user }};
    passenger_group {{ passenger_group }};
    passenger_app_type node;
    passenger_min_instances {{ passenger_min_instances }};
    passenger_startup_file main.js;
    {% if passenger_max_requests is defined %}
    passenger_max_requests {{ passenger_max_requests }};
    {% endif %}
    {% if var_meteor_settings is defined %}
    passenger_env_var METEOR_SETTINGS '{{ meteor_settings }}';
    {% endif %}

    client_max_body_size {{ nginx_client_max_body_size }};

    # serve static assets straight from nginx
    location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
          root {{ app_checkout_bundle_path }}/bundle/programs/web.browser/app/;
          access_log off;
          expires max;
    }

    location / {
        if ($request_method = 'OPTIONS') {
                      add_header 'Access-Control-Allow-Origin' '*';
                      #
                      # Om nom nom cookies
                      #
                      add_header 'Access-Control-Allow-Credentials' 'true';
                      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                      #
                      # Custom headers and headers various browsers *should* be OK with but aren't
                      #
                      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                      #
                      # Tell client that this pre-flight info is valid for 20 days
                      #
                      add_header 'Access-Control-Max-Age' 1728000;
                      add_header 'Content-Type' 'text/plain charset=UTF-8';
                      add_header 'Content-Length' 0;
                      return 204;
        }
        if ($request_method = 'POST') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
        if ($request_method = 'GET') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
    }



    {% for meteor_env_key, meteor_env_val in meteor_env.iteritems() %}
      passenger_env_var {{ meteor_env_key }} "{{ meteor_env_val }}";
    {% endfor %}



}
