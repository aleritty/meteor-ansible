# s/o https://serversforhackers.com/load-balancing-with-haproxy
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend localnodes
    bind *:80
    {% if haproxy_enable_ssl %}
    bind *:443 ssl crt /etc/ssl/private/haproxy.pem
    {% if haproxy_force_ssl %}
    redirect scheme https if !{ ssl_fc }
    {% endif %}
    {% endif %}

    mode http
    default_backend nodes

backend nodes
    mode http
    balance leastconn
    option forwardfor
    cookie SERVERID insert indirect nocache
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    {% if haproxy_ws_healthcheck_domain is defined %}
    option httpchk GET /sockjs/999/test1234/websocket HTTP/1.1\r\nHost:\ {{ haproxy_ws_healthcheck_domain }}\r\nConnection:\ Upgrade\r\nUpgrade:\ websocket\r\nSec-WebSocket-Key:\ haproxy\r\nSec-WebSocket-Version:\ 13\r\nSec-WebSocket-Protocol:\ echo-protocol
    http-check expect status 101
    {% else %}
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    {% endif %}

    {% for host in groups['appservers'] %}
      server s{{loop.index}} {{ hostvars[host]['ansible_'+haproxy_config_use_appservers_eth]['ipv4']['address'] }}:80 check cookie s{{loop.index}}
    {% endfor %}

{% if haproxy_enable_stats %}
listen stats *:{{ haproxy_stats_port }}
    stats enable
    stats uri /
    stats hide-version
    stats auth {{ haproxy_stats_username }}:{{ haproxy_stats_password }}
{% endif %}
